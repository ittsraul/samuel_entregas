// default package
// Generated 26 nov 2023 19:40:10 by Hibernate Tools 5.2.13.Final
package enginerinversed.entities;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Conversation generated by hbm2java
 */
@Entity
@Table(name = "Conversation", catalog = "kurigram")
public class Conversation implements java.io.Serializable {

	private Integer id;
	private Message message;
	private Set<User> users = new HashSet<User>(0);
	private Set<Participant> participants = new HashSet<Participant>(0);
	private Set<Message> messages = new HashSet<Message>(0);

	public Conversation() {
	}

	public Conversation(Message message, Set<User> users, Set<Participant> participants, Set<Message> messages) {
		this.message = message;
		this.users = users;
		this.participants = participants;
		this.messages = messages;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "last_message_id")
	public Message getMessage() {
		return this.message;
	}

	public void setMessage(Message message) {
		this.message = message;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "conversation_user", catalog = "kurigram", joinColumns = {
			@JoinColumn(name = "conversation_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_id", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "conversation")
	public Set<Participant> getParticipants() {
		return this.participants;
	}

	public void setParticipants(Set<Participant> participants) {
		this.participants = participants;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "conversation")
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

}
